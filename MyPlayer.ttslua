--Class for a Player
MyPlayer = inherit(nil)
MyPlayer.color = ''
--MyPlayer.player = {}  TODO Fix this removal!
MyPlayer.roleSelector = false --TODO Remove this functionality?
MyPlayer.claimSelector = false --TODO Remove this functionality?
MyPlayer.role = {}
MyPlayer.endRole = {} --TODO Different system?
MyPlayer.ready = false --TODO More specific?
MyPlayer.cardUI = {}
MyPlayer.vote = ''
MyPlayer.claim = ''
MyPlayer.disconnected = false
MyPlayer.protected = false --TODO Can this be made more Sentinel-sided?
function MyPlayer.constructor(this, args)
    color = args.color
    this.color = color
    --this.player = Player[color]
end
function MyPlayer.revealRole(this, color, role)
    this.cardUI.UI.setAttribute(color .. "Image", 'image', role.name .. ' Card')
end
function MyPlayer.setRole(this, role)
    this.role = role
    this.role.color = this.color
    this.endRole = table.clone(this.role)
end
function MyPlayer.generateCard(this)
    local object = spawnObject({type="Checker_white", position=cardLocation[this.color].position, rotation=cardLocation[this.color].rotation, sound=false, callback_function=setupCard}) --TODO Position based on hand location

    function setupCard() --TODO Add defaults
        local xmlToAdd = ""
        for _, color in pairs(Player.getColors()) do
            if color == this.color then
                xmlToAdd = xmlToAdd .. "<Panel width='300' height='400' position='0 1000 0' visibility='" .. color .. "' id='" .. color .. "'><Image id='" .. color .. "Image' image='" .. Game.players[color].role.name .. " Card' /><Image id='" .. color .. "Sentinel' image='Sentinel Token' visibility=' ' /></Panel>"
            else
                xmlToAdd = xmlToAdd .. "<Panel width='300' height='400' position='0 1000 0' visibility='" .. color .. "' id='" .. color .. "'><Image id='" .. color .. "Image' image='Back' /><Image id='" .. color .. "Sentinel' width='100' height='100' image='Sentinel Token' visibility=' ' /></Panel>"
            end
        end
        xmlToAdd = xmlToAdd .. "<Panel id='" .. this.color .. "Claim' width='800' height='800' position='0 -750 -1300' rotation='90 0 180' visibility=' '><Image id='" .. this.color .. "ClaimImage' /></Panel>" ..
        "<Panel id='" .. this.color .. "ClaimMini' width='300' height='300' position='0 1350 0' visibility=' '><Image id='" .. this.color .. "ClaimMiniImage' /></Panel>" ..
        "<Panel id='" .. this.color .. "Ready' width='150' height='150' position='0 650 0' visibility=''><Image id='" .. this.color .. "ReadyImage' image='Red Light' /></Panel>"

        this.cardUI = object
        this.cardUI.setInvisibleTo(Player.getColors())
        this.cardUI.setLock(true)
        this.cardUI.UI.setXml(xmlToAdd)
    end
end
function MyPlayer.hasWon(this)
    for i, team in ipairs(Game.winningTeams) do
        if this.endRole.team == team then
            return true
        end
    end
    return false
end
function MyPlayer.generateXml(this)
    local xmlToAdd = ""

    xmlToAdd = xmlToAdd .. "<GridLayout id='" .. this.color .. "PlayerSelector' class='PlayerSelector' visibility='" .. this.color .. "' active='false'>" ..
        "<Text id='" .. this.color .. "PlayerSelectorInstructions' class='PlayerSelectorInstructions'>Default Text</Text>"
    for color, player in pairs(Game.players) do
        if color ~= this.color then
            xmlToAdd = xmlToAdd .. "<Panel id='" .. this.color .. "PlayerSelector" .. color .. "Panel' color='" .. color .. "' onClick='playerNightClick(" .. color .. ")'>" ..
                "<Image id='" .. this.color .. "PlayerSelector" .. color .. "Sentinel' class='PlayerSelectorSentinel' active='false' />" ..
                "<Text id='" .. this.color .. "PlayerSelector" .. color .. "' class='PlayerSelectorColor'>" .. player.player.steam_name .. "</Text>" ..
            "</Panel>"
        else
            xmlToAdd = xmlToAdd .. "<Panel id='" .. this.color .. "PlayerSelector" .. this.color .. "Panel' color='" .. this.color .. "' onClick='playerNightClick(" .. this.color .. ")' active='false'>" ..
                "<Image id='" .. this.color .. "PlayerSelector" .. this.color .. "Sentinel' class='PlayerSelectorSentinel' active='false' />" ..
                "<Text id='" .. this.color .. "PlayerSelector" .. this.color .. "' class='PlayerSelectorColor'>" .. this.player.steam_name .. "</Text>" ..
            "</Panel>"
        end
    end
    xmlToAdd = xmlToAdd .. "</GridLayout>"

    xmlToAdd = xmlToAdd .. "<TableLayout id='" .. this.color .. "CenterCards' class='CenterCards' active='false' visibility='" .. this.color .. "'>" ..
        "<Row preferredHeight='100'><Cell columnSpan='3'><Panel><Text id='" .. this.color .. "CenterCardsInstructions' class='CenterCardsInstructions'>Default text</Text></Panel></Cell></Row>" ..
        "<Row id='" .. this.color .."CenterCardsAW' preferredHeight='300' active='false'><Cell columnSpan='3'><Panel><Image id='" .. this.color .. "CenterCardsMiddleCard4' class='CenterCardsMiddleCard4' /></Panel></Cell></Row>" ..
        "<Row preferredHeight='400'>"
            for i= 1, 3 do
                "<Cell height='400' width='300'><Panel><Image id='" .. this.color .. "CenterCardsMiddleCard" .. i .. "' image='Back' onClick='playerNightClick(" .. i .. ")' /></Panel></Cell>"
            end
        xmlToAdd = xmlToAdd .. "</Row>" ..
    "</TableLayout>"

    xmlToAdd = xmlToAdd .. "<GridLayout id='" .. this.color .. "PlayerList' class='PlayerList' active='false' visibility='" .. this.color .. "'>" ..
        "<Text id='" .. this.color .. "PlayerListInstructions' class='PlayerListInstructions'>Default Text</Text>"
        local i = 1
        for color, player in pairs(Game.players) do
            xmlToAdd = xmlToAdd .. "<Panel><Panel id='" .. this.color .. "PlayerList" .. i .. "' class='PlayerListColorPanel' color='" .. color .. "' active='false'><Text id='" .. this.color .. "PlayerList" .. i .. "Text' class='PlayerListColorText'>" .. player.player.steam_name .. "</Text></Panel></Panel>"
            i = i + 1
        end
        xmlToAdd = xmlToAdd .. "<Panel><Panel id='" .. this.color .. "PlayerListExtra' class='PlayerListExtra' active='false'><Text id='" .. this.color .. "PlayerListExtraText' class='PlayerListExtraText'></Text></Panel></Panel>"
    xmlToAdd = xmlToAdd .. "</GridLayout>"

    xmlToAdd = xmlToAdd .. "<TableLayout id='" .. this.color .. "PlayerShow' class='PlayerShow' active='false' visibility='" .. this.color .. "'>" ..
        "<Row preferredHeight='200'><Cell><Panel><Text id='" .. this.color .. "PlayerShowInstructions' class='PlayerShowInstructions'>Default Text</Text></Panel></Cell></Row>" ..
        "<Row preferredHeight='400'><Cell><Panel><Image id='" .. this.color .. "PlayerShowCard' class='PlayerShowCard' /></Panel></Cell></Row>" ..
        "<Row preferredHeight='100'><Cell><Panel id='" .. this.color .. "PlayerShowButton' class='PlayerShowButton' active='false'><Text id='" .. this.color .. "PlayerShowButtonText' class='PlayerShowButtonText'></Text></Panel></Cell></Row>" ..
    "</TableLayout>"

    return xmlToAdd
end
function MyPlayer.toggleReady(this, status)
    --Fixes TTS garbage
    if status == "True" then
        status = true
    else
        status = false
    end
    --Stores player ready status
    this.ready = status
    --Updates color of button
    local colorButton = "Red"
    if status then
        colorButton = "Green"
    end
    self.UI.setAttribute("ready" .. this.color, "color", colorButton)
    this.cardUI.UI.setAttribute(this.color .. "ReadyImage", "image", colorButton .. " Light")
end
